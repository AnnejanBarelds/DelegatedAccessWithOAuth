@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using DTO;
@using Microsoft.Identity.Web;
@using Web.Data
@inject IBackendService BackendService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecast.Forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <details>
        <summary>Token</summary>
        <p>@forecast.Token</p>
    </details>
}

@code {
    private WeatherForecastResult? forecast;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecast = await BackendService.GetForecast(DateTime.Now);
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
